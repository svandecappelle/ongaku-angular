:host {
    
}

.actions-container {
    width: 100%;
    text-align: center;
}

.library {
    margin-bottom: 80px;
    width: calc(100% - 70px);
}

.example-header-image {
    background-size: cover;
}
.artist-tags {
    margin: 5px 3px;
    
    h3 {
        font-size: 1.1rem;
        margin: 5px 3px;
    }
}

.mat-chip {
    padding: 3px 8px;
}

ul {
    position: relative;
    left: 0;
    right: 0;

    li {
        list-style-type: none;
        margin-bottom: 2rem;

        .mat-card-image {
            display: inline-block;
            max-width: 100px;
        }
        mat-card-title {
            margin: 10px 5px;
        }
        mat-card-header {
            margin-bottom: 0.5rem;
        }
        .header-image{
            background-size: cover;
        }
        .cover-image{
            margin-right: 5px;
            background-size: cover;
            display:inline-block;
        }
        
        .cover-icon{
            font-size: 40px;
            margin-right: 15px;
            display:inline-block;
        }

        h4 {
            display:inline-block;
            margin-top: 10px;
            margin-bottom: 0px;
            vertical-align: top;
        }
        
        .artist-bio {
            a {
                color: #CECECE !important;
            }
        }
    }
}

.album-actions {
    display: flex;
    justify-content: flex-end;
}

.track {
    span {
        vertical-align: middle;
        line-height: 40px;
    }
    display: flex;
    justify-content: space-between;
    
    .track-number {
        width: 25px;
        text-align: right;
        margin-right: 25px;
    }

    .track-title {
        flex: 1;
    }

    .track-duration {
        width: 100px;
    }
}

.filter-header {
    min-height: 64px;
    padding: 8px 24px 0;
    .mat-form-field {
        font-size: 14px;
        width: 100%;
    }
}

@mixin transform($transforms) {
    -moz-transform: $transforms;
      -o-transform: $transforms;
     -ms-transform: $transforms;
    -webkit-transform: $transforms;
       transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
        -o-transform-origin: $origin;
        -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
        transform-origin: $origin;
}


$blockSize: 2em;
//$blockSize: 6vmin; // Try this in Firefox! Viewport based size, which doesn't work in Canary at the moment

// Play with these to see what you get
$delay: .065s;
$duration: .88s;
$startingColor: #fdfdfd;
$endingColor: #dadada;

// Calculate some values
$blockMargin: $blockSize / 3;
$loaderSize: $blockSize * 3 + $blockMargin * 2;

@mixin animation-delay( $delay ) {
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
}

// Official syntax supported by IE10, FF16, Opera 12.1,
// so we're only going to add the webkit prefix
@mixin animation( $ani1:null, $ani2:null ) {
  @if ($ani2 != null) {
    -webkit-animation: $ani1, $ani2;
    animation: $ani1, $ani2;
  }
  
  @else if ($ani1 != null) {
    -webkit-animation: $ani1;
    animation: $ani1;
  }
}

.loader-lib {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $loaderSize;
  height: $loaderSize;
  margin-left: -$loaderSize/2;
  margin-top: -$loaderSize/2;
}

.loader-block {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  opacity: 0;
  width: $blockSize;
  height: $blockSize;
  background: $startingColor;
  @include animation(show $duration step-end infinite alternate,
    pulse $duration linear infinite alternate);
}



// Second
.loader-block:nth-child(1) {
  @include translate(0, 0);
  @include animation-delay(1 * $delay);
}

// Ninth
.loader-block:nth-child(2) {
  @include translate($blockSize + $blockMargin, 0);
  @include animation-delay(2 * $delay);
}

// Fourth
.loader-block:nth-child(3) {
  @include translate(($blockSize * 2) + ($blockMargin * 2), 0);
  @include animation-delay(3 * $delay);
}

// Sixth
.loader-block:nth-child(4) {
  @include translate(0, $blockSize + $blockMargin);
  @include animation-delay(5 * $delay);
}

// Third
.loader-block:nth-child(5) {
  @include translate($blockSize + $blockMargin, $blockSize + $blockMargin);
  @include animation-delay(2 * $delay);
}

// Eighth
.loader-block:nth-child(6) {
  @include translate(($blockSize * 2) + ($blockMargin * 2), $blockSize + $blockMargin);
  @include animation-delay(7 * $delay);
}

// Seventh
.loader-block:nth-child(7) {
  @include translate(0, ($blockSize * 2) + ($blockMargin * 2));
  @include animation-delay(6 * $delay);
}

// Fifth
.loader-block:nth-child(8) {
  @include translate($blockSize + $blockMargin, ($blockSize * 2) + ($blockMargin * 2));
  @include animation-delay(4 * $delay);
}

// First
.loader-block:nth-child(9) {
  @include translate(($blockSize * 2) + ($blockMargin * 2), ($blockSize * 2) + ($blockMargin * 2));
}


@-webkit-keyframes pulse {
  from,
  40% { 
    background: $startingColor;
  }
  to {
    background: $endingColor;
  }
}

@-webkit-keyframes show {
  from, 40% { opacity: 0; }
  41%, to { opacity: 1; }
}

@keyframes pulse {
  from,
  40% { 
    background: $startingColor;
  }
  to {
    background: $endingColor;
  }
}

@keyframes show {
  from, 40% { opacity: 0; }
  41%, to { opacity: 1; }
}